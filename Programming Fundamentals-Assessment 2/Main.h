//Main.h holds all the functions used in main.cpp
#pragma once
#include <iostream>
#include <thread>
#include <cstdlib> 
using namespace std;
#include <chrono>
#include <algorithm>
#include <random>


#pragma region Slowtype Functions

int delayMilliseconds = 50;
int slowdelayMilliseconds = 200;

// A slow type function that writes the string provided slower
void slowType(const string& text, int delay) 
{
    for (char c : text) 
    {
        cout << c << flush; 
       this_thread::sleep_for(chrono::milliseconds(delay));
    }
}
// Overloaded function to use floats for a faster slow type
void slowType(const string& text, float delay) 
{
    for (char c : text) {
        cout << c << flush;
        this_thread::sleep_for(chrono::duration<float, milli>(delay));
    }

    
}

#pragma endregion 

#pragma region Clearscreen Function

// A clear console function to give the player easier readablity
void clearConsole() 
    {
        system("cls");
    }
#pragma endregion

#pragma region Random Function

//Properties for the RNG
std::random_device device;
std::mt19937 randomGenerator(device());

/// <summary>
/// Returns a random integer between {min} and {max}
/// </summary>
/// <param name="min">The minimum value</param>
/// <param name="max">The maximum value</param>
/// <returns>A random integer</returns>
int random(int min, int max)
{
    //We have to do this because if the ranges aren't
    //ordered then C++ will throw an error
    int trueMin = std::min(min, max);
    int trueMax = std::max(max, min);

    //Build a uniform distribution
    std::uniform_int_distribution<int> udist(trueMin, trueMax);

    //Sample the distribution using the generator
    return udist(randomGenerator);
}
#pragma endregion 

#pragma region Diceroll Function

int Diceroll(int num)
{
    // I know I could have used a switch case here, please dont get angry...

    if (num == 1)
    {
        cout << R"(|------------------------------------------------------------------------------------|
|                                        @@@@                                        |       
|                                     @@@@@@@@@@                                     |       
|                                  @@@@@@@@@@@@@@@@                                  |       
|                              @@@@@@@@@@@  @@@@@@@@@@@                              |        
|                           @@@@@@@@@@@@@    @@@@@@@@@@@@@                           |       
|                        @@@@@@@@@@@@@@        @@@@@@@@@@@@@@                        |       
|                     @@@@@@@@  @@@@@@          @@@@@@  @@@@@@@@                     |       
|                  @@@@@@@@    @@@@@              @@@@@    @@@@@@@@                  |       
|               @@@@@@@@     @@@@@@                @@@@@@     @@@@@@@@               |       
|           @@@@@@@@@       @@@@@                    @@@@@       @@@@@@@@@           |       
|          @@@@@@@        @@@@@@                      @@@@@@        @@@@@@@          |       
|          @@@@@@@@@     @@@@@                          @@@@@     @@@@@@@@@          |       
|          @@@@@@@@@@@@@@@@@@                            @@@@@@@@@@@@@@@@@@          |       
|          @@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@          |       
|          @@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@          |       
|          @@@@      @@@@@@@                              @@@@@@@      @@@@          |       
|          @@@@     @@@@@@@@@                            @@@@@@@@@     @@@@          |       
|          @@@@    @@@@@ @@@@@            @@            @@@@@ @@@@@    @@@@          |       
|          @@@@   @@@@@   @@@@@         @@@@@          @@@@@   @@@@@   @@@@          |       
|          @@@@   @@@@     @@@@@@        @@@@         @@@@@     @@@@   @@@@          |       
|          @@@@  @@@@@       @@@@@       @@@@        @@@@        @@@@  @@@@          |       
|          @@@@ @@@@@         @@@@@      @@@@      @@@@@@        @@@@@ @@@@          | 
|          @@@@@@@@@           @@@@@     @@@@     @@@@@           @@@@@@@@@          | 
|          @@@@@@@@             @@@@@   @@@@@@   @@@@@            @@@@@@@@@          | 
|          @@@@@@@@              @@@@@          @@@@@              @@@@@@@@          | 
|          @@@@@@@                @@@@@        @@@@@                @@@@@@@          | 
|          @@@@@@@                 @@@@@      @@@@@                  @@@@@@          | 
|          @@@@@@                   @@@@@    @@@@@                   @@@@@@          | 
|          @@@@@@@@@@                @@@@@  @@@@@                 @@@@@@@@@          | 
|          @@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@          | 
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            | 
|               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               | 
|                   @@@@@@@@@          @@@@@@@@           @@@@@@@@                   | 
|                      @@@@@@@@          @@@@          @@@@@@@@                      | 
|                         @@@@@@@@@      @@@@      @@@@@@@@@                         | 
|                            @@@@@@@@@   @@@@   @@@@@@@@@                            | 
|                               @@@@@@@@@@@@@@@@@@@@@@                               | 
|                                   @@@@@@@@@@@@@@                                   | 
|                                      @@@@@@@@                                      | 
|                                         @@                                         | 
|------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 2)
    {
        cout << R"(|------------------------------------------------------------------------------------|
|                                        @@@@                                        |       
|                                     @@@@@@@@@@                                     |       
|                                  @@@@@@@@@@@@@@@@                                  |       
|                              @@@@@@@@@@@  @@@@@@@@@@@                              |        
|                           @@@@@@@@@@@@@    @@@@@@@@@@@@@                           |       
|                        @@@@@@@@@@@@@@        @@@@@@@@@@@@@@                        |       
|                     @@@@@@@@  @@@@@@          @@@@@@  @@@@@@@@                     |       
|                  @@@@@@@@    @@@@@              @@@@@    @@@@@@@@                  |       
|               @@@@@@@@     @@@@@@                @@@@@@     @@@@@@@@               |       
|           @@@@@@@@@       @@@@@                    @@@@@       @@@@@@@@@           |       
|          @@@@@@@        @@@@@@                      @@@@@@        @@@@@@@          |       
|          @@@@@@@@@     @@@@@                          @@@@@     @@@@@@@@@          |       
|          @@@@@@@@@@@@@@@@@@                            @@@@@@@@@@@@@@@@@@          |       
|          @@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@          |       
|          @@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@          |       
|          @@@@      @@@@@@@                              @@@@@@@      @@@@          |       
|          @@@@     @@@@@@@@@                            @@@@@@@@@     @@@@          |       
|          @@@@    @@@@@ @@@@@         @@@@@@@         @@@@@  @@@@@    @@@@          |
|          @@@@   @@@@@    @@@@@      @@@  @@@        @@@@@    @@@@    @@@@          | 
|          @@@@  @@@@@      @@@@@          @@@       @@@@@     @@@@@   @@@@          | 
|          @@@@  @@@@        @@@@@       @@@@       @@@@@       @@@@@  @@@@          | 
|          @@@@@@@@@          @@@@@    @@@@       @@@@@@         @@@@  @@@@          | 
|          @@@@@@@@@           @@@@@  @@@@@@@@@  @@@@@           @@@@@@@@@@          |
|          @@@@@@@@             @@@@@            @@@@@            @@@@@@@@@          | 
|          @@@@@@@@              @@@@@          @@@@@              @@@@@@@@          | 
|          @@@@@@@                @@@@@        @@@@@                @@@@@@@          | 
|          @@@@@@@                 @@@@@      @@@@@                  @@@@@@          | 
|          @@@@@@                   @@@@@    @@@@@                   @@@@@@          | 
|          @@@@@@@@@@                @@@@@  @@@@@                 @@@@@@@@@          | 
|          @@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@          | 
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            | 
|               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               | 
|                   @@@@@@@@@          @@@@@@@@           @@@@@@@@                   | 
|                      @@@@@@@@          @@@@          @@@@@@@@                      | 
|                         @@@@@@@@@      @@@@      @@@@@@@@@                         | 
|                            @@@@@@@@@   @@@@   @@@@@@@@@                            | 
|                               @@@@@@@@@@@@@@@@@@@@@@                               | 
|                                   @@@@@@@@@@@@@@                                   | 
|                                      @@@@@@@@                                      | 
|                                         @@                                         | 
|------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 3)
    {
        cout << R"(|------------------------------------------------------------------------------------|
|                                        @@@@                                        |       
|                                     @@@@@@@@@@                                     |       
|                                  @@@@@@@@@@@@@@@@                                  |       
|                              @@@@@@@@@@@  @@@@@@@@@@@                              |        
|                           @@@@@@@@@@@@@    @@@@@@@@@@@@@                           |       
|                        @@@@@@@@@@@@@@        @@@@@@@@@@@@@@                        |       
|                     @@@@@@@@  @@@@@@          @@@@@@  @@@@@@@@                     |       
|                  @@@@@@@@    @@@@@              @@@@@    @@@@@@@@                  |       
|               @@@@@@@@     @@@@@@                @@@@@@     @@@@@@@@               |       
|           @@@@@@@@@       @@@@@                    @@@@@       @@@@@@@@@           |       
|          @@@@@@@        @@@@@@                      @@@@@@        @@@@@@@          |       
|          @@@@@@@@@     @@@@@                          @@@@@     @@@@@@@@@          |       
|          @@@@@@@@@@@@@@@@@@                            @@@@@@@@@@@@@@@@@@          |       
|          @@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@          |       
|          @@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@          |       
|          @@@@      @@@@@@@                              @@@@@@@      @@@@          |       
|          @@@@     @@@@@@@@@                            @@@@@@@@@     @@@@          |       
|          @@@@    @@@@@ @@@@@         @@@@@@@          @@@@@  @@@@@   @@@@          | 
|          @@@@   @@@@@    @@@@@       @@   @@@        @@@@@    @@@@@  @@@@          |
|          @@@@   @@@@      @@@@@          @@@@       @@@@@      @@@@  @@@@          |
|          @@@@  @@@@        @@@@@        @@@@       @@@@@       @@@@@ @@@@          |
|          @@@@ @@@@@         @@@@@         @@@     @@@@@         @@@@@@@@@          |
|          @@@@@@@@@           @@@@@   @@   @@@   @@@@@@          @@@@@@@@@          |
|          @@@@@@@@             @@@@@   @@@@@@@   @@@@@            @@@@@@@@          | 
|          @@@@@@@@              @@@@@          @@@@@              @@@@@@@@          | 
|          @@@@@@@                @@@@@        @@@@@                @@@@@@@          | 
|          @@@@@@@                 @@@@@      @@@@@                  @@@@@@          | 
|          @@@@@@                   @@@@@    @@@@@                   @@@@@@          | 
|          @@@@@@@@@@                @@@@@  @@@@@                 @@@@@@@@@          | 
|          @@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@          | 
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            | 
|               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               | 
|                   @@@@@@@@@          @@@@@@@@           @@@@@@@@                   | 
|                      @@@@@@@@          @@@@          @@@@@@@@                      | 
|                         @@@@@@@@@      @@@@      @@@@@@@@@                         | 
|                            @@@@@@@@@   @@@@   @@@@@@@@@                            | 
|                               @@@@@@@@@@@@@@@@@@@@@@                               | 
|                                   @@@@@@@@@@@@@@                                   | 
|                                      @@@@@@@@                                      | 
|                                         @@                                         | 
|------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 4)
    {
        cout << R"(|------------------------------------------------------------------------------------|                                                            
|                                      @@@@                                          |
|                                  @@@@@@@@@@@                                       | 
|                               @@@@@@@@@@@@@@@@                                     | 
|                            @@@@@@@@@@@@@@@@@@@@@@                                  |
|                         @@@@@@@@@@@@@   @@@@@@@@@@@@                               |
|                     @@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@                           |
|                  @@@@@@@@@@@@@@@@@         @@@@@@ @@@@@@@@@                        |
|               @@@@@@@@@   @@@@@@            @@@@@@   @@@@@@@@@                     |
|            @@@@@@@@@    @@@@@@                @@@@@@    @@@@@@@@@@                 |
|         @@@@@@@@@      @@@@@@                  @@@@@@      @@@@@@@@@@              |
|     @@@@@@@@@@       @@@@@@                      @@@@@@        @@@@@@@@@           |
|     @@@@@@@         @@@@@@                        @@@@@@         @@@@@@@@          |
|     @@@@@@@@@@    @@@@@@                            @@@@@@    @@@@@@@@@@@          | 
|     @@@@@@@@@@@@@@@@@@@                              @@@@@@@@@@@@@@@@@@@@          |
|     @@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@          |
|     @@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@          |
|     @@@@      @@@@@@@@                                @@@@@@@@      @@@@@          |
|     @@@@     @@@@@@@@@@                              @@@@@@@@@@     @@@@@          |
|     @@@@     @@@@@ @@@@@                            @@@@@@ @@@@@    @@@@@          |
|     @@@@    @@@@@   @@@@@            @@@@          @@@@@@  @@@@@    @@@@@          |
|     @@@@   @@@@@     @@@@@         @@@@@@         @@@@@     @@@@@   @@@@@          |
|     @@@@  @@@@@       @@@@@       @@@ @@@        @@@@@       @@@@@  @@@@@          |
|     @@@@  @@@@@        @@@@@     @@@  @@@       @@@@@         @@@@  @@@@@          |
|     @@@@@@@@@@          @@@@@    @@@@@@@@@@    @@@@@          @@@@@ @@@@@          |
|     @@@@@@@@@            @@@@@@       @@@     @@@@@            @@@@@@@@@@          |
|     @@@@@@@@@             @@@@@@    @@@@@@@  @@@@@              @@@@@@@@@          |
|     @@@@@@@@               @@@@@@           @@@@@               @@@@@@@@@          |
|     @@@@@@@                 @@@@@@        @@@@@@                 @@@@@@@@          |
|     @@@@@@                   @@@@@@      @@@@@@                   @@@@@@@          |
|     @@@@@@                     @@@@@    @@@@@@                    @@@@@@@          |
|     @@@@@@@                     @@@@@  @@@@@@                    @@@@@@@@          |
|     @@@@@@@@@@@@@@@@@@@          @@@@@@@@@@@         @@@@@@@@@@@@@@@@@@@@          |
|      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            |
|          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               |
|             @@@@@@@@@        @@@@@@@@@@@@@@@@@@        @@@@@@@@@                   |
|                @@@@@@@@@            @@@@            @@@@@@@@@                      |
|                   @@@@@@@@@@        @@@@         @@@@@@@@@                         |
|                      @@@@@@@@@@     @@@@     @@@@@@@@@@                            |
|                          @@@@@@@@@  @@@@  @@@@@@@@@                                |
|                             @@@@@@@@@@@@@@@@@@@@                                   |
|                                @@@@@@@@@@@@@@                                      |
|                                   @@@@@@@@                                         |
|                                     @@@@                                           |
|------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 5)
    {
        cout << R"(|------------------------------------------------------------------------------------|                                               
|                                     @@@@@@@                                        |
|                                  @@@@@@@@@@@@@                                     |
|                               @@@@@@@@@@@@@@@@@@@                                  |
|                           @@@@@@@@@@@@  @@@@@@@@@@@@                               |
|                        @@@@@@@@@@@@@@     @@@@@@@@@@@@@                            |  
|                     @@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@                        |
|                  @@@@@@@@@  @@@@@@           @@@@@@  @@@@@@@@@                     |
|              @@@@@@@@@@   @@@@@@              @@@@@@    @@@@@@@@@                  |
|           @@@@@@@@@@     @@@@@@                 @@@@@@     @@@@@@@@@               |
|        @@@@@@@@@       @@@@@@                    @@@@@@       @@@@@@@@@@           |
|      @@@@@@@@         @@@@@@                       @@@@@@        @@@@@@@@@         |
|      @@@@@@@@@      @@@@@@                          @@@@@@       @@@@@@@@@         |
|      @@@@@@@@@@@@  @@@@@@                             @@@@@@ @@@@@@@@@@@@@         |
|      @@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@         |
|      @@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@         |
|      @@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@         |
|      @@@@      @@@@@@@@@                               @@@@@@@@@     @@@@@         |
|      @@@@     @@@@@@@@@@@                             @@@@@@@@@@@    @@@@@         |
|      @@@@    @@@@@  @@@@@@         @@@@@@@@          @@@@@  @@@@@    @@@@@         |
|      @@@@    @@@@@   @@@@@@        @@@@@@@@         @@@@@    @@@@@   @@@@@         |
|      @@@@   @@@@@     @@@@@@       @@@             @@@@@      @@@@@  @@@@@         |
|      @@@@  @@@@@        @@@@@      @@@@@@@@       @@@@@       @@@@@  @@@@@         |
|      @@@@  @@@@@         @@@@@          @@@@     @@@@@         @@@@@ @@@@@         |
|      @@@@@@@@@@           @@@@@   @@@   @@@    @@@@@@           @@@@@@@@@@         |
|      @@@@@@@@@             @@@@@  @@@@@@@@@   @@@@@@            @@@@@@@@@@         |
|      @@@@@@@@@              @@@@@            @@@@@@              @@@@@@@@@         |
|      @@@@@@@@                @@@@@          @@@@@@                @@@@@@@@         |
|      @@@@@@@                  @@@@@        @@@@@@                 @@@@@@@@         |
|      @@@@@@                    @@@@@      @@@@@                    @@@@@@@         |
|      @@@@@@                     @@@@@@   @@@@@                      @@@@@@         |
|      @@@@@@@@@@@@                @@@@@@ @@@@@                 @@@@@@@@@@@@         |
|      @@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@         |
|         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            |
|            @@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@               |
|               @@@@@@@@@           @@@@@@@@@@           @@@@@@@@@@                  |
|                  @@@@@@@@@@          @@@@@          @@@@@@@@@                      |
|                     @@@@@@@@@@       @@@@@       @@@@@@@@@                         |
|                         @@@@@@@@@    @@@@@   @@@@@@@@@@                            |
|                            @@@@@@@@@ @@@@@@@@@@@@@@@                               |
|                               @@@@@@@@@@@@@@@@@@                                   |
|                                  @@@@@@@@@@@@                                      |
|                                      @@@@@                                         |
|------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 6)
    {
        cout << R"(|------------------------------------------------------------------------------------|                                                                     
|                                                                                    |
|                                   @@@@@                                            |
|                                @@@@@@@@@@@                                         |
|                             @@@@@@@@@@@@@@@@@                                      |
|                          @@@@@@@@@@@ @@@@@@@@@@@                                   |
|                      @@@@@@@@@@@@@     @@@@@@@@@@@@@                               |
|                   @@@@@@@@@@@@@@@       @@@@@@@@@@@@@@@                            |
|                @@@@@@@@@  @@@@@           @@@@@  @@@@@@@@@                         |
|             @@@@@@@@@   @@@@@@             @@@@@@   @@@@@@@@@                      |
|          @@@@@@@@@     @@@@@                 @@@@@     @@@@@@@@@                   |
|      @@@@@@@@@       @@@@@@                   @@@@@@       @@@@@@@@@               |
|     @@@@@@@         @@@@@                       @@@@@         @@@@@@@              |
|     @@@@@@@@@     @@@@@@                         @@@@@@     @@@@@@@@@              |
|     @@@@@@@@@@@@@@@@@@                             @@@@@@@@@@@@@@@@@@              |
|     @@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@              |
|     @@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@              |
|     @@@@      @@@@@@@                               @@@@@@@      @@@@              |
|     @@@@     @@@@@@@@@                             @@@@@@@@@     @@@@              |
|     @@@@    @@@@@ @@@@@           @@@@@@          @@@@@ @@@@@    @@@@              |
|     @@@@    @@@@   @@@@@         @@              @@@@@   @@@@    @@@@              |
|     @@@@   @@@@@    @@@@@       @@              @@@@@    @@@@@   @@@@              |
|     @@@@  @@@@@      @@@@@      @@@@@@@@      @@@@@@      @@@@@  @@@@              |
|     @@@@  @@@@        @@@@@     @@     @      @@@@@        @@@@  @@@@              |
|     @@@@ @@@@@         @@@@@@    @@   @@    @@@@@@         @@@@@ @@@@              |
|     @@@@@@@@@           @@@@@@     @@@     @@@@@@           @@@@@@@@@              |
|     @@@@@@@@              @@@@@           @@@@@              @@@@@@@@              |
|     @@@@@@@                @@@@@         @@@@@                @@@@@@@              |
|     @@@@@@@                 @@@@@       @@@@@                 @@@@@@@              |
|     @@@@@@                   @@@@@     @@@@@                   @@@@@@              |
|     @@@@@                     @@@@@   @@@@@                    @@@@@@              |
|     @@@@@@@@@@@@@@             @@@@@ @@@@@             @@@@@@@@@@@@@@              |
|     @@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@              |
|        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                 |
|            @@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@                     |
|               @@@@@@@@@           @@@@@           @@@@@@@@@                        |
|                  @@@@@@@@@        @@@@@        @@@@@@@@@                           |
|                     @@@@@@@@@     @@@@@     @@@@@@@@@                              |
|                        @@@@@@@@@  @@@@@  @@@@@@@@@                                 |
|                            @@@@@@@@@@@@@@@@@@@                                     |
|                               @@@@@@@@@@@@@                                        |
|                                  @@@@@@@                                           |
|------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 7)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                        
|                                       @@@@@@@                                       |   
|                                    @@@@@@@@@@@@@                                    |   
|                                 @@@@@@@@@@@@@@@@@@@@                                |   
|                             @@@@@@@@@@@@@ @@@@@@@@@@@@@                             |   
|                          @@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@                          |   
|                       @@@@@@@@@@@@@@@@       @@@@@@@@@@@@@@@@                       |   
|                    @@@@@@@@@@@@@@@@@@          @@@@@@@@@@@@@@@@@@                   |   
|                 @@@@@@@@@@   @@@@@@             @@@@@@@  @@@@@@@@@@@                |   
|             @@@@@@@@@@@    @@@@@@@                @@@@@@    @@@@@@@@@@@             |   
|          @@@@@@@@@@@     @@@@@@@                   @@@@@@@      @@@@@@@@@@          |   
|       @@@@@@@@@@@       @@@@@@@                      @@@@@@        @@@@@@@@@@       |   
|    @@@@@@@@@@         @@@@@@@                         @@@@@@@         @@@@@@@@@@    |   
|    @@@@@@@@@         @@@@@@@                            @@@@@@          @@@@@@@@    |   
|    @@@@@@@@@@@@    @@@@@@@                               @@@@@@@    @@@@@@@@@@@@    |   
|    @@@@@@@@@@@@@@@@@@@@@@                                  @@@@@@@@@@@@@@@@@@@@@    |   
|    @@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@    |   
|    @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@    |   
|    @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@    |   
|    @@@@@      @@@@@@@@@@                                   @@@@@@@@@@      @@@@@    |   
|    @@@@@      @@@@@@@@@@@                                 @@@@@@@@@@@@     @@@@@    |   
|    @@@@@     @@@@@  @@@@@@           @@@@@@@@@           @@@@@@  @@@@@     @@@@@    |   
|    @@@@@    @@@@@@   @@@@@@                 @@          @@@@@@   @@@@@@    @@@@@    |   
|    @@@@@   @@@@@@     @@@@@@               @@          @@@@@@     @@@@@@   @@@@@    |   
|    @@@@@   @@@@@       @@@@@@             @@          @@@@@@       @@@@@@  @@@@@    |   
|    @@@@@  @@@@@@         @@@@@           @@          @@@@@@         @@@@@  @@@@@    |   
|    @@@@@ @@@@@@           @@@@@@        @@          @@@@@@          @@@@@@ @@@@@    |   
|    @@@@@@@@@@@             @@@@@@      @@          @@@@@@            @@@@@@@@@@@    |   
|    @@@@@@@@@@@              @@@@@@                @@@@@@              @@@@@@@@@@    |   
|    @@@@@@@@@@                @@@@@@              @@@@@@                @@@@@@@@@    |   
|    @@@@@@@@@                  @@@@@@           @@@@@@@                 @@@@@@@@@    |   
|    @@@@@@@@                    @@@@@@         @@@@@@@                   @@@@@@@@    |   
|    @@@@@@@@                     @@@@@@       @@@@@@                      @@@@@@@    |   
|    @@@@@@@                       @@@@@@     @@@@@@                       @@@@@@@    |   
|    @@@@@@@                        @@@@@@   @@@@@@                         @@@@@@    |   
|    @@@@@@@@@@@@@@@@@@              @@@@@@ @@@@@@              @@@@@@@@@@@@@@@@@@    |   
|    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@    |   
|       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       |   
|           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          |   
|             @@@@@@@@@@          @@@@@@@@@@@@@@@@@          @@@@@@@@@@@              |   
|                 @@@@@@@@@@@            @@@@@             @@@@@@@@@@                 |   
|                    @@@@@@@@@@@         @@@@@          @@@@@@@@@@                    |   
|                       @@@@@@@@@@@      @@@@@      @@@@@@@@@@@                       |   
|                           @@@@@@@@@@   @@@@@   @@@@@@@@@@@                          |  
|                              @@@@@@@@@@@@@@@@@@@@@@@@@                              |   
|                                 @@@@@@@@@@@@@@@@@@@                                 |   
|                                    @@@@@@@@@@@@@                                    |   
|                                        @@@@@@                                       |
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 8)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                          
|                                          @@@@                                       |   
|                                       @@@@@@@@@@                                    |   
|                                   @@@@@@@@@@@@@@@@@                                 |   
|                                @@@@@@@@@@@@@@@@@@@@@@@                              |   
|                             @@@@@@@@@@@@@@  @@@@@@@@@@@@@                           |   
|                          @@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@                       |   
|                       @@@@@@@@@@@@@@@@         @@@@@@@@@@@@@@@@@                    |   
|                   @@@@@@@@@@@ @@@@@@@           @@@@@@@  @@@@@@@@@@                 |   
|                @@@@@@@@@@    @@@@@@               @@@@@@    @@@@@@@@@@              |   
|             @@@@@@@@@@     @@@@@@@                 @@@@@@@     @@@@@@@@@@@          |   
|          @@@@@@@@@@       @@@@@@                     @@@@@@       @@@@@@@@@@@       |   
|       @@@@@@@@@@        @@@@@@@                       @@@@@@@        @@@@@@@@@@@    |   
|     @@@@@@@@@          @@@@@@                           @@@@@@@          @@@@@@@@   |   
|     @@@@@@@@@@@      @@@@@@@                             @@@@@@@      @@@@@@@@@@@   |   
|     @@@@@@@@@@@@@@  @@@@@@                                 @@@@@@@ @@@@@@@@@@@@@@   |   
|     @@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@   |   
|     @@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@   |   
|     @@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@   |   
|     @@@@@@      @@@@@@@@@                                    @@@@@@@@       @@@@@   |   
|     @@@@@@     @@@@@@@@@@@                                 @@@@@@@@@@@      @@@@@   |   
|     @@@@@@    @@@@@@ @@@@@@            @@@@@@             @@@@@@ @@@@@@     @@@@@   |   
|     @@@@@@    @@@@@   @@@@@@          @@     @           @@@@@@   @@@@@@    @@@@@   |   
|     @@@@@@   @@@@@     @@@@@@         @@    @@          @@@@@@     @@@@@    @@@@@   |   
|     @@@@@@  @@@@@@      @@@@@@          @@@@@          @@@@@@       @@@@@   @@@@@   |   
|     @@@@@@ @@@@@@        @@@@@@        @@  @@@        @@@@@@        @@@@@@  @@@@@   |   
|     @@@@@@ @@@@@          @@@@@@      @      @@      @@@@@@          @@@@@@ @@@@@   |   
|     @@@@@@@@@@@@           @@@@@@     @@    @@@     @@@@@@            @@@@@@@@@@@   |   
|     @@@@@@@@@@@             @@@@@@@     @@@@       @@@@@@             @@@@@@@@@@@   |   
|     @@@@@@@@@@                @@@@@               @@@@@@               @@@@@@@@@@   |   
|     @@@@@@@@@@                 @@@@@@            @@@@@@                 @@@@@@@@@   |   
|     @@@@@@@@@                   @@@@@@          @@@@@@                  @@@@@@@@@   |   
|     @@@@@@@@                     @@@@@@        @@@@@                     @@@@@@@@   |   
|     @@@@@@@                       @@@@@@     @@@@@@                       @@@@@@@   |   
|     @@@@@@@                        @@@@@@   @@@@@@                         @@@@@@   |   
|     @@@@@@@@@@@@@@@@                @@@@@@ @@@@@@                @@@@@@@@@@@@@@@@   |  
|     @@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@   |   
|        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      |   
|           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         |   
|               @@@@@@@@@@         @@@@@@@@@@@@@@@@@@@         @@@@@@@@@@@            |   
|                  @@@@@@@@@@             @@@@@             @@@@@@@@@@                |   
|                     @@@@@@@@@@          @@@@@          @@@@@@@@@@                   |   
|                        @@@@@@@@@@@      @@@@@       @@@@@@@@@@                      |   
|                            @@@@@@@@@@   @@@@@   @@@@@@@@@@@                         |   
|                               @@@@@@@@@@@@@@@@@@@@@@@@@@                            |   
|                                  @@@@@@@@@@@@@@@@@@@                                |   
|                                     @@@@@@@@@@@@@                                   |   
|                                        @@@@@@@                                      | 
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 9)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                          
|                                       @@@@@@@@                                      |   
|                                    @@@@@@@@@@@@@@                                   |   
|                                 @@@@@@@@@@@@@@@@@@@@@                               |   
|                              @@@@@@@@@@@@  @@@@@@@@@@@@@                            |   
|                          @@@@@@@@@@@@@@@     @@@@@@@@@@@@@@                         |   
|                       @@@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@                      |   
|                    @@@@@@@@@@ @@@@@@@          @@@@@@@  @@@@@@@@@                   |   
|                 @@@@@@@@@@   @@@@@@              @@@@@@    @@@@@@@@@@               |   
|             @@@@@@@@@@     @@@@@@@                 @@@@@@     @@@@@@@@@@            |   
|          @@@@@@@@@@       @@@@@@                    @@@@@@       @@@@@@@@@@         |   
|       @@@@@@@@@@        @@@@@@@                       @@@@@@        @@@@@@@@@@      |   
|       @@@@@@@@         @@@@@@                          @@@@@@          @@@@@@@@     |   
|       @@@@@@@@@@@    @@@@@@@                             @@@@@@     @@@@@@@@@@@     |   
|       @@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@     |   
|       @@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@     |   
|       @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@     |   
|       @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@     |   
|       @@@@@     @@@@@@@@@@                                 @@@@@@@@@      @@@@@     |   
|       @@@@@    @@@@@@@@@@@@                               @@@@@@@@@@@     @@@@@     |   
|       @@@@@    @@@@@  @@@@@@          @@@@@@@           @@@@@@  @@@@@     @@@@@     |   
|       @@@@@   @@@@@    @@@@@@        @@     @@         @@@@@@    @@@@@    @@@@@     |   
|       @@@@@  @@@@@@     @@@@@@       @@     @@        @@@@@@      @@@@@   @@@@@     |   
|       @@@@@  @@@@@       @@@@@@       @@@@@@@@       @@@@@@       @@@@@@  @@@@@     |   
|       @@@@@ @@@@@         @@@@@@            @@      @@@@@@         @@@@@  @@@@@     |   
|       @@@@@@@@@@@           @@@@@          @@      @@@@@@           @@@@@ @@@@@     |   
|       @@@@@@@@@@            @@@@@@    @@@@@       @@@@@@             @@@@@@@@@@     |   
|       @@@@@@@@@               @@@@@              @@@@@@              @@@@@@@@@@     |   
|       @@@@@@@@                 @@@@@            @@@@@@                @@@@@@@@@     |   
|       @@@@@@@@                  @@@@@          @@@@@@                  @@@@@@@@     |   
|       @@@@@@@                    @@@@@@       @@@@@                    @@@@@@@@     |   
|       @@@@@@                      @@@@@@     @@@@@                      @@@@@@@     |   
|       @@@@@@                       @@@@@@   @@@@@                       @@@@@@@     |   
|       @@@@@@@@@@@@@@@@              @@@@@@@@@@@@              @@@@@@@@@@@@@@@@@     |   
|       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@      |   
|          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         |   
|              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@             |  
|                 @@@@@@@@@@            @@@@@@@@@            @@@@@@@@@@               |   
|                    @@@@@@@@@@           @@@@@          @@@@@@@@@@                   |   
|                       @@@@@@@@@@        @@@@@       @@@@@@@@@@                      |   
|                          @@@@@@@@@@     @@@@@    @@@@@@@@@@                         |   
|                              @@@@@@@@@@@@@@@@ @@@@@@@@@@                            |   
|                                 @@@@@@@@@@@@@@@@@@@@                                |   
|                                    @@@@@@@@@@@@@@                                   |   
|                                       @@@@@@@@                                      |
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 10)
    {
        cout << R"(|------------------------------------------------------------------------------------|                                                                                        
|                                                                                     |  
|                                       @@@@@@@                                       |   
|                                    @@@@@@@@@@@@@                                    |   
|                                 @@@@@@@@@@@@@@@@@@@                                 |   
|                              @@@@@@@@@@@@@@@@@@@@@@@@@                              |   
|                           @@@@@@@@@@@@@@   @@@@@@@@@@@@@@@                          |   
|                        @@@@@@@@@@@@@@@       @@@@@@@@@@@@@@@@                       |   
|                    @@@@@@@@@@@@@@@@@@         @@@@@@@@@@@@@@@@@@                    |   
|                 @@@@@@@@@@@  @@@@@@             @@@@@@  @@@@@@@@@@@                 |   
|              @@@@@@@@@@@   @@@@@@@               @@@@@@@    @@@@@@@@@@              |   
|           @@@@@@@@@@      @@@@@@                  @@@@@@@      @@@@@@@@@@           |   
|        @@@@@@@@@@       @@@@@@@                     @@@@@@@       @@@@@@@@@@@       |   
|     @@@@@@@@@@         @@@@@@                         @@@@@@         @@@@@@@@@@     |   
|    @@@@@@@@          @@@@@@@                           @@@@@@@          @@@@@@@@    |   
|    @@@@@@@@@@@      @@@@@@                               @@@@@@      @@@@@@@@@@@    |   
|    @@@@@@@@@@@@@@@@@@@@@@                                 @@@@@@@@@@@@@@@@@@@@@@    |   
|    @@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@    |   
|    @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@    |   
|    @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@    |   
|    @@@@@      @@@@@@@@@                                     @@@@@@@@@      @@@@@    |   
|    @@@@@      @@@@@@@@@@@                                  @@@@@@@@@@      @@@@@    |   
|    @@@@@     @@@@@@@@@@@@          @@@      @@@@@@        @@@@@@@@@@@@     @@@@@    |   
|    @@@@@    @@@@@@  @@@@@@@      @@ @@     @@    @@      @@@@@@  @@@@@@    @@@@@    |   
|    @@@@@    @@@@@     @@@@@@        @@    @@     @@    @@@@@@     @@@@@    @@@@@    |   
|    @@@@@   @@@@@       @@@@@@       @@    @@      @   @@@@@@       @@@@@   @@@@@    |   
|    @@@@@  @@@@@@        @@@@@@      @@    @@     @@  @@@@@@        @@@@@@  @@@@@    |   
|    @@@@@ @@@@@@          @@@@@@     @@     @     @@ @@@@@@          @@@@@@ @@@@@    |   
|    @@@@@@@@@@@            @@@@@@ @@@@@@@    @@@@@@ @@@@@@            @@@@@@@@@@@    |   
|    @@@@@@@@@@@             @@@@@@                 @@@@@@             @@@@@@@@@@@    |   
|    @@@@@@@@@@               @@@@@@               @@@@@@               @@@@@@@@@@    |   
|    @@@@@@@@@                 @@@@@@             @@@@@@                 @@@@@@@@@    |   
|    @@@@@@@@@                  @@@@@@           @@@@@@                  @@@@@@@@@    |   
|    @@@@@@@@                    @@@@@@         @@@@@@                    @@@@@@@@    |   
|    @@@@@@@                      @@@@@@       @@@@@@                      @@@@@@@    |   
|    @@@@@@                        @@@@@@     @@@@@@                        @@@@@@    |   
|    @@@@@@@@                       @@@@@@   @@@@@@                       @@@@@@@@    |   
|    @@@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@    |   
|    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      |   
|        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        |   
|           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           |   
|              @@@@@@@@@@@            @@@@@@@@@@@            @@@@@@@@@@@              |   
|                 @@@@@@@@@@@            @@@@@            @@@@@@@@@@@                 |   
|                    @@@@@@@@@@@         @@@@@         @@@@@@@@@@@                    |   
|                        @@@@@@@@@@      @@@@@      @@@@@@@@@@                        |   
|                           @@@@@@@@@@   @@@@@   @@@@@@@@@@                           |   
|                              @@@@@@@@@@@@@@@@@@@@@@@@@                              |   
|                                 @@@@@@@@@@@@@@@@@@@                                 |   
|                                    @@@@@@@@@@@@@                                    |   
|                                       @@@@@@@                                       |
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 11)
    {
        cout << R"(                                                                                       
|-------------------------------------------------------------------------------------|
|                                                                                     |   
|                                          @@@@                                       |   
|                                       @@@@@@@@@@                                    |   
|                                    @@@@@@@@@@@@@@@@                                 |   
|                                 @@@@@@@@@@@@@@@@@@@@@@                              |   
|                              @@@@@@@@@@@@@  @@@@@@@@@@@@@                           |   
|                          @@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@                       |   
|                       @@@@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@@                    |   
|                    @@@@@@@@@@  @@@@@@           @@@@@@@ @@@@@@@@@@@                 |   
|                @@@@@@@@@@@   @@@@@@@              @@@@@@@   @@@@@@@@@@              |   
|             @@@@@@@@@@@     @@@@@@                 @@@@@@@     @@@@@@@@@@           |   
|          @@@@@@@@@@@      @@@@@@@                    @@@@@@@      @@@@@@@@@@@       |   
|       @@@@@@@@@@         @@@@@@                        @@@@@@         @@@@@@@@@@    |   
|     @@@@@@@@@          @@@@@@@                          @@@@@@@          @@@@@@@@   |   
|     @@@@@@@@@@@       @@@@@@                              @@@@@@       @@@@@@@@@@   |   
|     @@@@@@@@@@@@@@  @@@@@@@                                @@@@@@@  @@@@@@@@@@@@@   |   
|     @@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@   |   
|     @@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@   |   
|     @@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@   |   
|     @@@@@@      @@@@@@@@@                                    @@@@@@@@@      @@@@@   |   
|     @@@@@@     @@@@@@@@@@@                                  @@@@@@@@@@@     @@@@@   |   
|     @@@@@@     @@@@@ @@@@@@         @@@       @@@          @@@@@@@@@@@@     @@@@@   |   
|     @@@@@@    @@@@@@  @@@@@@       @ @@      @  @         @@@@@@  @@@@@@    @@@@@   |   
|     @@@@@@   @@@@@@    @@@@@@        @@         @        @@@@@@    @@@@@@   @@@@@   |   
|     @@@@@@  @@@@@@      @@@@@@       @@         @       @@@@@@      @@@@@   @@@@@   |   
|     @@@@@@  @@@@@        @@@@@@      @@         @      @@@@@@        @@@@@  @@@@@   |   
|     @@@@@@ @@@@@@         @@@@@@     @@         @     @@@@@          @@@@@@ @@@@@   |   
|     @@@@@@@@@@@@            @@@@@@ @@@@@@@   @@@@@@ @@@@@@            @@@@@@@@@@@   |   
|     @@@@@@@@@@@             @@@@@@@                @@@@@@              @@@@@@@@@@   |   
|     @@@@@@@@@@                @@@@@@              @@@@@@               @@@@@@@@@@   |   
|     @@@@@@@@@@                 @@@@@@            @@@@@@                 @@@@@@@@@   |   
|     @@@@@@@@@                   @@@@@@          @@@@@@                   @@@@@@@@   |   
|     @@@@@@@@                     @@@@@@        @@@@@@                    @@@@@@@@   |   
|     @@@@@@@@                      @@@@@@      @@@@@@                      @@@@@@@   |   
|     @@@@@@@                        @@@@@@    @@@@@@                        @@@@@@   |   
|     @@@@@@@@@@@@                    @@@@@@  @@@@@@                   @@@@@@@@@@@@   |    
|     @@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@   |   
|        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     |   
|           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        |   
|              @@@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@@           |   
|                 @@@@@@@@@@@             @@@@@@             @@@@@@@@@@@              |   
|                     @@@@@@@@@@          @@@@@           @@@@@@@@@@                  |   
|                        @@@@@@@@@@       @@@@@        @@@@@@@@@@                     |   
|                           @@@@@@@@@@    @@@@@     @@@@@@@@@@                        |   
|                              @@@@@@@@@@@@@@@@@@@@@@@@@@@@                           |   
|                                 @@@@@@@@@@@@@@@@@@@@@@                              |   
|                                     @@@@@@@@@@@@@@                                  |   
|                                        @@@@@@@@                                     |    
|-------------------------------------------------------------------------------------|                                      
                                                                                        
                                                                                        )" << '\n';
    }
    else if (num == 12)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                            
|                                        @@@@@@@                                      |   
|                                     @@@@@@@@@@@@@                                   |   
|                                  @@@@@@@@@@@@@@@@@@@                                |   
|                              @@@@@@@@@@@@@ @@@@@@@@@@@@@                            |   
|                           @@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@                         |   
|                        @@@@@@@@@@@@@@@@       @@@@@@@@@@@@@@@@                      |   
|                     @@@@@@@@@@ @@@@@@@         @@@@@@@ @@@@@@@@@@                   |   
|                  @@@@@@@@@@  @@@@@@@             @@@@@@   @@@@@@@@@@                |   
|              @@@@@@@@@@@    @@@@@@@               @@@@@@@    @@@@@@@@@@@            |   
|           @@@@@@@@@@@     @@@@@@@                   @@@@@@      @@@@@@@@@@@         |   
|        @@@@@@@@@@        @@@@@@@                     @@@@@@@        @@@@@@@@@@      |   
|      @@@@@@@@@         @@@@@@@                         @@@@@@          @@@@@@@@@    |   
|      @@@@@@@@@        @@@@@@@                           @@@@@@@        @@@@@@@@@    |   
|      @@@@@@@@@@@@   @@@@@@@                               @@@@@@   @@@@@@@@@@@@@    |   
|      @@@@@@@@@@@@@@@@@@@@@                                 @@@@@@@@@@@@@@@@@@@@@    |   
|      @@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@    |   
|      @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@    |   
|      @@@@@      @@@@@@@@@                                   @@@@@@@@@      @@@@@    |   
|      @@@@@      @@@@@@@@@@                                 @@@@@@@@@@      @@@@@    |   
|      @@@@@     @@@@@ @@@@@@        @@@@     @@@@@@        @@@@@@@@@@@@     @@@@@    |   
|      @@@@@    @@@@@@  @@@@@@      @  @@          @@      @@@@@@  @@@@@@    @@@@@    |   
|      @@@@@   @@@@@@    @@@@@@        @@          @@     @@@@@@    @@@@@@   @@@@@    |   
|      @@@@@   @@@@@      @@@@@@       @@         @@     @@@@@@      @@@@@   @@@@@    |   
|      @@@@@  @@@@@        @@@@@@      @@        @      @@@@@@       @@@@@@  @@@@@    |   
|      @@@@@ @@@@@@         @@@@@@     @@      @@      @@@@@@         @@@@@@ @@@@@    |   
|      @@@@@@@@@@@           @@@@@@ @@@@@@@   @@@@@@@ @@@@@@           @@@@@ @@@@@    |   
|      @@@@@@@@@@             @@@@@@                 @@@@@@             @@@@@@@@@@    |   
|      @@@@@@@@@@              @@@@@@               @@@@@               @@@@@@@@@@    |   
|      @@@@@@@@@                 @@@@@            @@@@@@                 @@@@@@@@@    |   
|      @@@@@@@@                   @@@@@@         @@@@@@                   @@@@@@@@    |   
|      @@@@@@@@                    @@@@@@       @@@@@@                    @@@@@@@@    |   
|      @@@@@@@                      @@@@@@     @@@@@@                      @@@@@@@    |   
|      @@@@@@                        @@@@@@   @@@@@@                        @@@@@@    |   
|      @@@@@@@@@@@@@@                 @@@@@@ @@@@@@                 @@@@@@@@@@@@@@    |   
|      @@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@    |   
|         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       |   
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          |   
|               @@@@@@@@@@          @@@@@@@@@@@@@@@@@          @@@@@@@@@@             |   
|                  @@@@@@@@@@             @@@@@             @@@@@@@@@@                |   
|                     @@@@@@@@@@@         @@@@@         @@@@@@@@@@@                   |   
|                         @@@@@@@@@@      @@@@@      @@@@@@@@@@                       |   
|                            @@@@@@@@@@   @@@@@   @@@@@@@@@@                          |   
|                               @@@@@@@@@@@@@@@@@@@@@@@@@                             |   
|                                  @@@@@@@@@@@@@@@@@@@                                |   
|                                     @@@@@@@@@@@@@                                   |   
|                                         @@@@@                                       |
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 13)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                        
|                                          @@@                                        |   
|                                       @@@@@@@@@                                     |   
|                                    @@@@@@@@@@@@@@@                                  |   
|                                 @@@@@@@@@@@@@@@@@@@@@                               |   
|                             @@@@@@@@@@@@@  @@@@@@@@@@@@@@                           |   
|                          @@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@                        |   
|                       @@@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@@                     |   
|                    @@@@@@@@@@ @@@@@@@           @@@@@@  @@@@@@@@@@                  |   
|                @@@@@@@@@@@   @@@@@@              @@@@@@@   @@@@@@@@@@               |   
|             @@@@@@@@@@@    @@@@@@@                 @@@@@@     @@@@@@@@@@@           |   
|          @@@@@@@@@@       @@@@@@@                   @@@@@@@      @@@@@@@@@@@        |   
|       @@@@@@@@@@        @@@@@@@                       @@@@@@         @@@@@@@@@@     |   
|     @@@@@@@@@          @@@@@@@                         @@@@@@@          @@@@@@@@    |   
|     @@@@@@@@@@@      @@@@@@@                             @@@@@@       @@@@@@@@@@    |   
|     @@@@@@@@@@@@@@  @@@@@@                                @@@@@@@  @@@@@@@@@@@@@    |   
|     @@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@    |   
|     @@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@    |   
|     @@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@    |   
|     @@@@@@      @@@@@@@@@                                   @@@@@@@@@      @@@@@    |   
|     @@@@@@     @@@@@@@@@@@                                 @@@@@@@@@@@     @@@@@    |   
|     @@@@@@    @@@@@@ @@@@@@        @@@@     @@@@@@        @@@@@@ @@@@@     @@@@@    |   
|     @@@@@@    @@@@@   @@@@@@      @  @@          @@      @@@@@@   @@@@@    @@@@@    |   
|     @@@@@@   @@@@@     @@@@@@        @@         @@      @@@@@@    @@@@@@   @@@@@    |   
|     @@@@@@  @@@@@@      @@@@@@       @@       @@@@     @@@@@@      @@@@@@  @@@@@    |   
|     @@@@@@ @@@@@@        @@@@@@      @@          @@   @@@@@@        @@@@@  @@@@@    |   
|     @@@@@@ @@@@@          @@@@@@     @@         @@   @@@@@@          @@@@@ @@@@@    |   
|     @@@@@@@@@@@@           @@@@@@ @@@@@@@   @@@@@@  @@@@@            @@@@@@@@@@@    |   
|     @@@@@@@@@@@             @@@@@@                 @@@@@              @@@@@@@@@@    |   
|     @@@@@@@@@@                @@@@@               @@@@@                @@@@@@@@@    |   
|     @@@@@@@@@@                @@@@@@            @@@@@@                 @@@@@@@@@    |   
|     @@@@@@@@@                   @@@@@          @@@@@@                   @@@@@@@@    |   
|     @@@@@@@@                     @@@@@@       @@@@@@                     @@@@@@@    |   
|     @@@@@@@                       @@@@@@     @@@@@@                      @@@@@@@    |   
|     @@@@@@@                        @@@@@@   @@@@@@                        @@@@@@    |   
|     @@@@@@@@@@@@@@@                 @@@@@@ @@@@@@                @@@@@@@@@@@@@@@    |   
|     @@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@    |   
|        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       |   
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          |   
|               @@@@@@@@@@          @@@@@@@@@@@@@@@@@          @@@@@@@@@@             |   
|                  @@@@@@@@@@             @@@@@            @@@@@@@@@@@                |   
|                     @@@@@@@@@@@         @@@@@         @@@@@@@@@@                    |   
|                        @@@@@@@@@@@      @@@@@      @@@@@@@@@@@                      |   
|                            @@@@@@@@@@   @@@@@   @@@@@@@@@@                          |   
|                               @@@@@@@@@@@@@@@@@@@@@@@@@                             |   
|                                  @@@@@@@@@@@@@@@@@@@                                |   
|                                     @@@@@@@@@@@@@                                   |   
|                                        @@@@@@                                       |
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 14)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                            
|                                        @@@@@@@                                      |   
|                                    @@@@@@@@@@@@@@                                   |   
|                                 @@@@@@@@@@@@@@@@@@@@                                |   
|                              @@@@@@@@@@@@@ @@@@@@@@@@@@@                            |   
|                           @@@@@@@@@@@@@@     @@@@@@@@@@@@@@                         |   
|                        @@@@@@@@@@@@@@@@       @@@@@@@@@@@@@@@@                      |   
|                    @@@@@@@@@@  @@@@@@           @@@@@@ @@@@@@@@@@                   |   
|                 @@@@@@@@@@   @@@@@@@             @@@@@@@   @@@@@@@@@@               |   
|              @@@@@@@@@@     @@@@@@                 @@@@@@     @@@@@@@@@@            |   
|           @@@@@@@@@@      @@@@@@@                   @@@@@@@      @@@@@@@@@@         |   
|        @@@@@@@@@@        @@@@@@                       @@@@@@        @@@@@@@@@@      |   
|       @@@@@@@          @@@@@@@                         @@@@@@@         @@@@@@@@     |   
|       @@@@@@@@@@      @@@@@@                             @@@@@@      @@@@@@@@@@     |   
|       @@@@@@@@@@@@@@@@@@@@@                               @@@@@@@@@@@@@@@@@@@@@     |   
|       @@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@     |   
|       @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@     |   
|       @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@     |   
|       @@@@@     @@@@@@@@@@                                 @@@@@@@@@@     @@@@@     |   
|       @@@@@     @@@@@@@@@@@          @@         @@        @@@@@@@@@@@     @@@@@     |   
|       @@@@@    @@@@@  @@@@@@      @@@@@       @@@@       @@@@@@  @@@@@    @@@@@     |   
|       @@@@@   @@@@@@   @@@@@@        @@      @@ @@      @@@@@@   @@@@@@   @@@@@     |   
|       @@@@@   @@@@@     @@@@@@       @@     @@  @@     @@@@@@     @@@@@   @@@@@     |   
|       @@@@@  @@@@@       @@@@@@      @@    @@@@@@@    @@@@@@       @@@@@  @@@@@     |   
|       @@@@@ @@@@@         @@@@@@     @@         @@   @@@@@         @@@@@@ @@@@@     |   
|       @@@@@@@@@@@          @@@@@@  @@@@@@       @@  @@@@@           @@@@@@@@@@@     |   
|       @@@@@@@@@@             @@@@@                 @@@@@             @@@@@@@@@@     |   
|       @@@@@@@@@               @@@@@              @@@@@@               @@@@@@@@@     |   
|       @@@@@@@@@                @@@@@            @@@@@@                @@@@@@@@@     |   
|       @@@@@@@@                  @@@@@@         @@@@@@                  @@@@@@@@     |   
|       @@@@@@@                    @@@@@@       @@@@@@                    @@@@@@@     |   
|       @@@@@@                      @@@@@@     @@@@@@                     @@@@@@@     |   
|       @@@@@@                       @@@@@@   @@@@@@                       @@@@@@     |   
|       @@@@@@@@@@@@@@@               @@@@@@ @@@@@@               @@@@@@@@@@@@@@@     |   
|       @@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@     |   
|          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        |   
|             @@@@@@@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@           |   
|                @@@@@@@@@@           @@@@@@@@@@@@@           @@@@@@@@@@              |   
|                   @@@@@@@@@@            @@@@@            @@@@@@@@@@                 |   
|                       @@@@@@@@@@        @@@@@        @@@@@@@@@@                     |   
|                          @@@@@@@@@@     @@@@@     @@@@@@@@@@                        |   
|                             @@@@@@@@@@  @@@@@  @@@@@@@@@@                           |   
|                                @@@@@@@@@@@@@@@@@@@@@@@                              |   
|                                    @@@@@@@@@@@@@@@                                  |   
|                                       @@@@@@@@@                                     |   
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 15)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                        
|                                          @@@@                                       |   
|                                       @@@@@@@@@@                                    |   
|                                    @@@@@@@@@@@@@@@@                                 |   
|                                 @@@@@@@@@@@@@@@@@@@@@@                              |   
|                             @@@@@@@@@@@@@@  @@@@@@@@@@@@@@                          |   
|                          @@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@                       |   
|                       @@@@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@@                    |   
|                    @@@@@@@@@@  @@@@@@            @@@@@@  @@@@@@@@@@                 |   
|                 @@@@@@@@@@   @@@@@@@              @@@@@@@   @@@@@@@@@@              |   
|             @@@@@@@@@@@     @@@@@@                  @@@@@@     @@@@@@@@@@@          |   
|          @@@@@@@@@@@      @@@@@@@                    @@@@@@@      @@@@@@@@@@        |   
|       @@@@@@@@@@         @@@@@@                        @@@@@@         @@@@@@@@@@    |   
|      @@@@@@@@          @@@@@@@                          @@@@@@@          @@@@@@@@   |   
|      @@@@@@@@@@       @@@@@@                             @@@@@@@       @@@@@@@@@@   |   
|      @@@@@@@@@@@@@@ @@@@@@@                                @@@@@@@ @@@@@@@@@@@@@@   |   
|      @@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@   |   
|      @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@   |   
|      @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@   |   
|      @@@@@      @@@@@@@@@                                    @@@@@@@@       @@@@@   |   
|      @@@@@      @@@@@@@@@@                                  @@@@@@@@@@      @@@@@   |   
|      @@@@@     @@@@@ @@@@@@         @@@      @@@@@@        @@@@@@ @@@@@     @@@@@   |   
|      @@@@@    @@@@@@  @@@@@@         @@      @@          @@@@@@   @@@@@@    @@@@@   |   
|      @@@@@    @@@@@    @@@@@@@       @@      @@         @@@@@@     @@@@@    @@@@@   |   
|      @@@@@   @@@@@      @@@@@@       @@       @@@@@    @@@@@@      @@@@@@   @@@@@   |   
|      @@@@@  @@@@@@        @@@@@@     @@           @@  @@@@@@        @@@@@@  @@@@@   |   
|      @@@@@ @@@@@@          @@@@@@    @@           @@ @@@@@@          @@@@@  @@@@@   |   
|      @@@@@@@@@@@            @@@@@@ @@@@@@@  @@@@@@  @@@@@@            @@@@@@@@@@@   |   
|      @@@@@@@@@@@             @@@@@@                @@@@@@             @@@@@@@@@@@   |   
|      @@@@@@@@@@               @@@@@@              @@@@@@               @@@@@@@@@@   |   
|      @@@@@@@@@                 @@@@@@            @@@@@@                 @@@@@@@@@   |   
|      @@@@@@@@                   @@@@@@          @@@@@@                  @@@@@@@@@   |   
|      @@@@@@@@                    @@@@@@        @@@@@@                    @@@@@@@@   |   
|      @@@@@@@                      @@@@@@      @@@@@@                      @@@@@@@   |   
|      @@@@@@                        @@@@@@    @@@@@@                        @@@@@@   |   
|      @@@@@@@@@@@@@@                 @@@@@@  @@@@@@                 @@@@@@@@@@@@@@   |   
|      @@@@@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@@@@   |   
|        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     |   
|           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         |   
|              @@@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@            |   
|                  @@@@@@@@@@             @@@@@@             @@@@@@@@@@               |   
|                     @@@@@@@@@@          @@@@@@          @@@@@@@@@@                  |   
|                        @@@@@@@@@@       @@@@@@      @@@@@@@@@@@                     |   
|                           @@@@@@@@@@@   @@@@@@   @@@@@@@@@@@                        |   
|                              @@@@@@@@@@@@@@@@@@@@@@@@@@@@                           |   
|                                  @@@@@@@@@@@@@@@@@@@@                               |   
|                                     @@@@@@@@@@@@@@                                  |   
|                                        @@@@@@@@                                     |
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 16)
    {
        cout << R"(|--------------------------------------------------------------------------------------|                                                                                       
 |                                         @@@@@                                        | 
 |                                      @@@@@@@@@@@                                     | 
 |                                   @@@@@@@@@@@@@@@@@                                  | 
 |                                @@@@@@@@@@@@@@@@@@@@@@@@                              | 
 |                             @@@@@@@@@@@@@   @@@@@@@@@@@@@@                           | 
 |                         @@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@                        | 
 |                      @@@@@@@@@@@@@@@@@         @@@@@@@@@@@@@@@@@                     | 
 |                   @@@@@@@@@@  @@@@@@@            @@@@@@  @@@@@@@@@@                  | 
 |                @@@@@@@@@@    @@@@@@               @@@@@@@   @@@@@@@@@@               | 
 |            @@@@@@@@@@@     @@@@@@@                  @@@@@@      @@@@@@@@@@           | 
 |         @@@@@@@@@@        @@@@@@                     @@@@@@@       @@@@@@@@@@        | 
 |       @@@@@@@@@         @@@@@@@                        @@@@@@         @@@@@@@@@@     | 
 |      @@@@@@@@@         @@@@@@                           @@@@@@@        @@@@@@@@@     | 
 |      @@@@@@@@@@@@    @@@@@@@                              @@@@@@    @@@@@@@@@@@@     | 
 |      @@@@@@@@@@@@@@@@@@@@@                                 @@@@@@@@@@@@@@@@@@@@@     | 
 |      @@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@     | 
 |      @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@     | 
 |      @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@     | 
 |      @@@@@      @@@@@@@@@@                                 @@@@@@@@@@      @@@@@     | 
 |      @@@@@     @@@@@@@@@@@@          @@       @@@@@       @@@@@@@@@@@@     @@@@@     | 
 |      @@@@@     @@@@@  @@@@@@      @@@@@      @           @@@@@@  @@@@@@    @@@@@     | 
 |      @@@@@    @@@@@    @@@@@@        @@     @           @@@@@@    @@@@@    @@@@@     | 
 |      @@@@@   @@@@@@     @@@@@@       @@     @@@@@@@    @@@@@@      @@@@@   @@@@@     |
 |      @@@@@  @@@@@@       @@@@@@      @@     @     @@  @@@@@@       @@@@@@  @@@@@     |
 |      @@@@@  @@@@@         @@@@@@     @@     @@    @@ @@@@@@         @@@@@  @@@@@     | 
 |      @@@@@ @@@@@@          @@@@@@ @@@@@@@    @@@@@@ @@@@@@           @@@@@ @@@@@     | 
 |      @@@@@@@@@@@            @@@@@@                 @@@@@@            @@@@@@@@@@@     | 
 |      @@@@@@@@@@               @@@@@               @@@@@@              @@@@@@@@@@     | 
 |      @@@@@@@@@                 @@@@@             @@@@@@                @@@@@@@@@     | 
 |      @@@@@@@@@                  @@@@@           @@@@@@                  @@@@@@@@     | 
 |      @@@@@@@@                    @@@@@@        @@@@@                    @@@@@@@@     | 
 |      @@@@@@@                      @@@@@@     @@@@@@                      @@@@@@@     | 
 |      @@@@@@@                       @@@@@@    @@@@@                        @@@@@@     | 
 |      @@@@@@@@@@@@@                  @@@@@@ @@@@@@                  @@@@@@@@@@@@@     | 
 |      @@@@@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@@@@     | 
 |         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       | 
 |            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           | 
 |               @@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@              | 
 |                  @@@@@@@@@@             @@@@@             @@@@@@@@@@                 | 
 |                     @@@@@@@@@@@         @@@@@          @@@@@@@@@@                    | 
 |                        @@@@@@@@@@@      @@@@@       @@@@@@@@@@                       | 
 |                            @@@@@@@@@@   @@@@@   @@@@@@@@@@                           | 
 |                               @@@@@@@@@@@@@@@@@@@@@@@@@                              | 
 |                                  @@@@@@@@@@@@@@@@@@@                                 | 
 |                                     @@@@@@@@@@@@@                                    | 
 |                                        @@@@@@@                                       | 
|---------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 17)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                    
|                                       @@@@@@@@@                                     |   
|                                    @@@@@@@@@@@@@@@                                  |  
|                                 @@@@@@@@@@@@@@@@@@@@@                               |   
|                              @@@@@@@@@@@@@  @@@@@@@@@@@@@                           |   
|                          @@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@                        |   
|                       @@@@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@                     |   
|                    @@@@@@@@@@  @@@@@@           @@@@@@@ @@@@@@@@@@                  |   
|                 @@@@@@@@@@   @@@@@@@              @@@@@@    @@@@@@@@@@              |   
|              @@@@@@@@@@     @@@@@@                 @@@@@@@     @@@@@@@@@@           |   
|          @@@@@@@@@@       @@@@@@@                    @@@@@@       @@@@@@@@@@        |   
|       @@@@@@@@@@         @@@@@@                       @@@@@@@        @@@@@@@@@@     |   
|      @@@@@@@@@         @@@@@@@                          @@@@@@          @@@@@@@@    |   
|      @@@@@@@@@@@      @@@@@@                             @@@@@@@     @@@@@@@@@@@    |   
|      @@@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@    |   
|      @@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@    |   
|      @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@    |   
|      @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@    |   
|      @@@@@      @@@@@@@@@@                                  @@@@@@@@@      @@@@@    |   
|      @@@@@      @@@@@@@@@@@          @@     @@@@@@@@       @@@@@@@@@@@     @@@@@    |   
|      @@@@@     @@@@@  @@@@@@       @@@@           @@      @@@@@  @@@@@@    @@@@@    |   
|      @@@@@    @@@@@    @@@@@@        @@          @@     @@@@@@    @@@@@    @@@@@    |   
|      @@@@@   @@@@@@     @@@@@@       @@         @@     @@@@@@      @@@@@   @@@@@    |   
|      @@@@@   @@@@@       @@@@@@      @@        @@     @@@@@@       @@@@@@  @@@@@    |   
|      @@@@@  @@@@@         @@@@@@     @@       @@     @@@@@@         @@@@@  @@@@@    |   
|      @@@@@ @@@@@@          @@@@@@  @@@@@@    @@     @@@@@@           @@@@@ @@@@@    |   
|      @@@@@@@@@@@            @@@@@@                 @@@@@@            @@@@@@@@@@@    |   
|      @@@@@@@@@@               @@@@@               @@@@@@              @@@@@@@@@@    |   
|      @@@@@@@@@@                @@@@@@            @@@@@@                @@@@@@@@@    |   
|      @@@@@@@@@                  @@@@@           @@@@@@                 @@@@@@@@@    |   
|      @@@@@@@@                    @@@@@@        @@@@@                    @@@@@@@@    |   
|      @@@@@@@                      @@@@@@      @@@@@@                     @@@@@@@    |   
|      @@@@@@@                       @@@@@@    @@@@@                        @@@@@@    |   
|      @@@@@@@@@@@@                   @@@@@@ @@@@@@                   @@@@@@@@@@@@    |   
|      @@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@@@@    |   
|         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      |   
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          |   
|               @@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@             |   
|                  @@@@@@@@@@@            @@@@@             @@@@@@@@@@                |   
|                     @@@@@@@@@@@         @@@@@          @@@@@@@@@@                   |   
|                         @@@@@@@@@@      @@@@@      @@@@@@@@@@                       |   
|                            @@@@@@@@@@   @@@@@   @@@@@@@@@@                          |   
|                               @@@@@@@@@@@@@@@@@@@@@@@@@                             |   
|                                  @@@@@@@@@@@@@@@@@@@                                |   
|                                      @@@@@@@@@@@@                                   |   
|                                         @@@@@@                                      |       
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 18)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                                                                        
|                                           @@@@                                      |   
|                                       @@@@@@@@@@@@                                  |   
|                                    @@@@@@@@@@@@@@@@@@                               |   
|                                 @@@@@@@@@@@@@@@@@@@@@@@@                            |   
|                              @@@@@@@@@@@@@    @@@@@@@@@@@@@                         |   
|                           @@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@                      |   
|                       @@@@@@@@@@ @@@@@@          @@@@@@ @@@@@@@@@@                  |   
|                    @@@@@@@@@@  @@@@@@@            @@@@@@@  @@@@@@@@@@               |   
|                 @@@@@@@@@@    @@@@@@                @@@@@@    @@@@@@@@@@            |   
|              @@@@@@@@@      @@@@@@@                  @@@@@@@      @@@@@@@@@         |   
|          @@@@@@@@@@        @@@@@@                      @@@@@@        @@@@@@@@@@     |   
|         @@@@@@@@         @@@@@@@                        @@@@@@@         @@@@@@@     |   
|         @@@@@@@@@@@     @@@@@@                            @@@@@@     @@@@@@@@@@     |   
|         @@@@@@@@@@@@@@@@@@@@@                              @@@@@@@@@@@@@@@@@@@@     |   
|         @@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@     |   
|         @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@     |   
|         @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@     |   
|         @@@@@      @@@@@@@@@                                @@@@@@@@@      @@@@     |   
|         @@@@@     @@@@@@@@@@@          @@      @@@@@       @@@@@ @@@@@     @@@@     |   
|         @@@@@    @@@@@@  @@@@@       @@ @     @@    @     @@@@@   @@@@@    @@@@     |   
|         @@@@@    @@@@@    @@@@@         @      @@  @@    @@@@@    @@@@@    @@@@     |   
|         @@@@@   @@@@@      @@@@@        @       @@@@    @@@@@      @@@@@   @@@@     |   
|         @@@@@  @@@@@        @@@@@       @     @@    @@ @@@@@        @@@@@  @@@@     |   
|         @@@@@  @@@@@         @@@@@@     @@    @@    @@ @@@@         @@@@@  @@@@     |   
|         @@@@@@@@@@@           @@@@@@ @@@@@@@    @@@@  @@@@           @@@@@ @@@@     |   
|         @@@@@@@@@@             @@@@@@              @@@@@@             @@@@@@@@@     |   
|         @@@@@@@@@@              @@@@@@            @@@@@@               @@@@@@@@     |   
|         @@@@@@@@@                @@@@@@          @@@@@@                @@@@@@@@     |   
|         @@@@@@@@                  @@@@@@        @@@@@@                  @@@@@@@     |   
|         @@@@@@@                    @@@@@@      @@@@@@                    @@@@@@     |   
|         @@@@@@@                     @@@@@@    @@@@@                      @@@@@@     |   
|         @@@@@@@@@@@                   @@@@@  @@@@@@                  @@@@@@@@@@     |   
|         @@@@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@@@     |   
|            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       |   
|               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          |   
|                  @@@@@@@@@@         @@@@@@@@@@@@@@@@         @@@@@@@@@@             |   
|                     @@@@@@@@@@            @@@@            @@@@@@@@@@                |   
|                         @@@@@@@@@         @@@@         @@@@@@@@@                    |   
|                            @@@@@@@@@      @@@@      @@@@@@@@@                       |  
|                               @@@@@@@@@@  @@@@  @@@@@@@@@@                          |   
|                                  @@@@@@@@@@@@@@@@@@@@@@                             |   
|                                     @@@@@@@@@@@@@@@@                                |   
|                                         @@@@@@@@                                    | 
|                                            @@                                       |  
|                                                                                     |    
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 19)
    {
        cout << R"(|-------------------------------------------------------------------------------------|                                           
|                                       @@@@@@@@                                      |   
|                                    @@@@@@@@@@@@@@                                   |   
|                                 @@@@@@@@@@@@@@@@@@@@                                |   
|                              @@@@@@@@@@@@  @@@@@@@@@@@@@                            |   
|                           @@@@@@@@@@@@@@    @@@@@@@@@@@@@@@                         |   
|                        @@@@@@@@@@@@@@@@       @@@@@@@@@@@@@@@@                      |   
|                    @@@@@@@@@@ @@@@@@@          @@@@@@@ @@@@@@@@@@                   |   
|                 @@@@@@@@@@   @@@@@@@             @@@@@@   @@@@@@@@@@                |   
|              @@@@@@@@@@     @@@@@@                @@@@@@@    @@@@@@@@@@@            |   
|           @@@@@@@@@@      @@@@@@@                   @@@@@@       @@@@@@@@@@         |   
|       @@@@@@@@@@         @@@@@@                      @@@@@@@        @@@@@@@@@@      |   
|      @@@@@@@@@         @@@@@@@                         @@@@@@          @@@@@@@@     |   
|      @@@@@@@@@@       @@@@@@                            @@@@@@@      @@@@@@@@@@     |   
|      @@@@@@@@@@@@@  @@@@@@@                               @@@@@@  @@@@@@@@@@@@@     |   
|      @@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@     |   
|      @@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@     |   
|      @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@     |   
|      @@@@@      @@@@@@@@@                                  @@@@@@@@@      @@@@@     |   
|      @@@@@     @@@@@@@@@@@                                @@@@@@@@@@@     @@@@@     |   
|      @@@@@     @@@@@ @@@@@@        @@@@     @@@@@@       @@@@@@ @@@@@@    @@@@@     |   
|      @@@@@    @@@@@   @@@@@@         @@    @@    @@     @@@@@@   @@@@@    @@@@@     |   
|      @@@@@   @@@@@@    @@@@@@        @@    @@    @@    @@@@@@     @@@@@   @@@@@     |   
|      @@@@@   @@@@@      @@@@@@       @@     @@@@@@@   @@@@@@      @@@@@@  @@@@@     |   
|      @@@@@  @@@@@        @@@@@@      @@          @@  @@@@@@        @@@@@@ @@@@@     |   
|      @@@@@ @@@@@           @@@@@     @@         @@  @@@@@@          @@@@@ @@@@@     |   
|      @@@@@@@@@@@            @@@@@@  @@@@     @@@   @@@@@@           @@@@@@@@@@@     |   
|      @@@@@@@@@@              @@@@@                @@@@@@             @@@@@@@@@@     |   
|      @@@@@@@@@                @@@@@@             @@@@@@               @@@@@@@@@     |   
|      @@@@@@@@@                 @@@@@@           @@@@@@                 @@@@@@@@     |   
|      @@@@@@@@                   @@@@@@         @@@@@                   @@@@@@@@     |   
|      @@@@@@@                     @@@@@@       @@@@@                     @@@@@@@     |   
|      @@@@@@@                      @@@@@@     @@@@@                       @@@@@@     |   
|      @@@@@@@@                      @@@@@@  @@@@@@                      @@@@@@@@     |   
|      @@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@     |   
|       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      |   
|          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         |   
|             @@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@            |   
|                @@@@@@@@@@             @@@@@@@@             @@@@@@@@@@               |   
|                    @@@@@@@@@@           @@@@@           @@@@@@@@@@                  |   
|                       @@@@@@@@@@        @@@@@       @@@@@@@@@@@                     |   
|                          @@@@@@@@@@     @@@@@    @@@@@@@@@@                         |   
|                             @@@@@@@@@@  @@@@@ @@@@@@@@@@                            |   
|                                @@@@@@@@@@@@@@@@@@@@@@                               |   
|                                    @@@@@@@@@@@@@@@                                  |   
|                                       @@@@@@@@@                                     |   
|                                          @@                                         |   
|-------------------------------------------------------------------------------------|)" << '\n';
    }
    else if (num == 20)
    {
        cout << R"(|--------------------------------------------------------------------------------------|                                                                                        
|                                          @@@@                                         |
|                                       @@@@@@@@@@                                      | 
|                                    @@@@@@@@@@@@@@@@                                   | 
|                                 @@@@@@@@@@@@@@@@@@@@@@                                | 
|                              @@@@@@@@@@@@@  @@@@@@@@@@@@@                             | 
|                          @@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@                         | 
|                       @@@@@@@@@@@@@@@@@        @@@@@@@@@@@@@@@@@                      | 
|                    @@@@@@@@@@  @@@@@@            @@@@@@  @@@@@@@@@@                   | 
|                 @@@@@@@@@@   @@@@@@@              @@@@@@@   @@@@@@@@@@                | 
|              @@@@@@@@@@     @@@@@@                  @@@@@@     @@@@@@@@@@             | 
|          @@@@@@@@@@       @@@@@@@                    @@@@@@@       @@@@@@@@@@         | 
|       @@@@@@@@@@         @@@@@@                        @@@@@@         @@@@@@@@@@      | 
|       @@@@@@@@         @@@@@@@                          @@@@@@@         @@@@@@@@      | 
|       @@@@@@@@@@@     @@@@@@                              @@@@@@     @@@@@@@@@@@      | 
|       @@@@@@@@@@@@@@@@@@@@@                                @@@@@@@@@@@@@@@@@@@@@      | 
|       @@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@      | 
|       @@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@      | 
|       @@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       @@@@@      | 
|       @@@@@      @@@@@@@@@                                  @@@@@@@@@      @@@@@      | 
|       @@@@@     @@@@@@@@@@@        @@@@@      @@@@         @@@@@@@@@@@     @@@@@      | 
|       @@@@@    @@@@@@  @@@@@           @@   @@    @@      @@@@@  @@@@@@    @@@@@      | 
|       @@@@@    @@@@@    @@@@@          @@   @     @@     @@@@@    @@@@@    @@@@@      | 
|       @@@@@   @@@@@      @@@@@         @@   @      @    @@@@@      @@@@@   @@@@@      | 
|       @@@@@  @@@@@        @@@@@@     @@     @      @  @@@@@@       @@@@@@  @@@@@      | 
|       @@@@@ @@@@@@         @@@@@@   @@      @@    @@ @@@@@@         @@@@@@ @@@@@      | 
|       @@@@@ @@@@@           @@@@@@@@@@@@@@   @@@@@@ @@@@@@           @@@@@ @@@@@      | 
|       @@@@@@@@@@             @@@@@@                @@@@@@            @@@@@@@@@@@      | 
|       @@@@@@@@@@              @@@@@@              @@@@@@              @@@@@@@@@@      | 
|       @@@@@@@@@                @@@@@@            @@@@@@                @@@@@@@@@      | 
|       @@@@@@@@                  @@@@@@          @@@@@@                  @@@@@@@@      | 
|       @@@@@@@@                   @@@@@@        @@@@@@                   @@@@@@@@      | 
|       @@@@@@@                     @@@@@@      @@@@@@                     @@@@@@@      | 
|       @@@@@@                       @@@@@@    @@@@@@                       @@@@@@      | 
|       @@@@@@@@@@@@@                 @@@@@@  @@@@@@                 @@@@@@@@@@@@@      | 
|       @@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@       @@@@@@@@@@@@@@@@@@@@@@@@@      | 
|         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        | 
|             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            | 
|                @@@@@@@@@@        @@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@               | 
|                   @@@@@@@@@@             @@@@             @@@@@@@@@@                  | 
|                      @@@@@@@@@@          @@@@          @@@@@@@@@@                     | 
|                         @@@@@@@@@@       @@@@       @@@@@@@@@@                        | 
|                             @@@@@@@@@@   @@@@   @@@@@@@@@@                            | 
|                                @@@@@@@@@@@@@@@@@@@@@@@@                               | 
|                                   @@@@@@@@@@@@@@@@@@                                  | 
|                                      @@@@@@@@@@@@                                     | 
|                                         @@@@@@                                        | 
|---------------------------------------------------------------------------------------|)" << '\n';
    }
    return 0;


}

#pragma endregion

#pragma region GetDistanceBetweenPoints
//Inisitalises Stuct
struct Vector2
{
    double X;
    double Y;

    Vector2(double X, double Y) : X(X), Y(Y) {}

};
//Inisitlises function, calls information from struct
float GetDistanceBetweenPoints(double xComponents[2], double yComponents[2])
{
    Vector2 v1(xComponents[0], yComponents[0]);
    Vector2 v2(xComponents[1], yComponents[1]);

    return sqrt((v2.X - v1.X) * (v2.X - v1.X) + (v2.Y - v1.Y) * (v2.Y - v1.Y));

}

float Vector2Calculator()
{
    // Changed the floats to doubles, in case the user puts in a big number
    double xComponents[2] = { 0.0f, 0.0f };
    double yComponents[2] = { 0.0f, 0.0f };

    

    
        // Cool seperation line
        cout << "---------------------------------------------------------" << '\n';

        for (int i = 0; i < 2; )
        {
            std::cout << "Please enter the X component of vector " << (i + 1) << ": ";
            std::cin >> xComponents[i];

            std::cout << "Please enter the Y component of vector " << (i + 1) << ": ";
            std::cin >> yComponents[i];

            cout << '\n';
            //Error Handling 
            if (cin.fail())
            {
                cin.clear();
                cin.ignore(1000, '\n');
                cout << '\n';
                cout << "Invalid input! Please enter a valid number." << '\n';
                cout << "---------------------------------------------------------" << '\n';
                cout << '\n';

            }
            else
            {
                // Only increment if input was good
                i++;
            }
        }



        // Insitalises the distnace and sets it to the calcualte distance function
        double distance = GetDistanceBetweenPoints(xComponents, yComponents);

        // This is the most cooked cout line I have ever written
        cout << "Distance between points " << "(" << xComponents[0] << ", " << yComponents[0] << ") " << "and " << "(" << xComponents[1] << ", " << yComponents[1] << ") " << "is: " << distance << '\n';

        // I'm not sure if a clear of the cin is needed but I think so
        cin.clear();
        cout << '\n';

    

    return distance;

}

#pragma endregion